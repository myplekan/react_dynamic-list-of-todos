{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","clickedUser","setClickedUser","className","map","todo","id","completed","title","type","onClick","handleClickUser","TodoFilter","query","status","setStatus","setQuery","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","userLoading","setUserLoading","useEffect","userId","catch","Error","finally","href","name","App","setTodos","loading","setLoading","filteredTodos","useMemo","filterTodos","filter","preperedTodo","toLowerCase","preperedQuery","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.070781d2.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  clickedUser: Todo | null\n  setClickedUser: React.Dispatch<React.SetStateAction<Todo | null>>\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  clickedUser,\n  setClickedUser,\n}) => {\n  const handleClickUser = (todo: Todo) => {\n    setClickedUser(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={clickedUser?.id === todo.id\n              ? 'has-background-info-light'\n              : ''}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClickUser(todo)}\n              >\n                <span className=\"icon\">\n                  {clickedUser?.id === todo.id\n                    ? (<i className=\"far fa-eye-slash\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string\n  status: string\n  setStatus: React.Dispatch<React.SetStateAction<string>>\n  setQuery: React.Dispatch<React.SetStateAction<string>>\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  status,\n  setStatus = () => { },\n  setQuery = () => { },\n}) => {\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  clickedUser: Todo\n  setClickedUser: React.Dispatch<React.SetStateAction<Todo | null>>\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  clickedUser,\n  setClickedUser,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [userLoading, setUserLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(clickedUser.userId)\n      .then(setUser)\n      .catch(() => new Error('Try again later'))\n      .finally(() => setUserLoading(false));\n  }, [clickedUser]);\n\n  const handleCloseClick = () => {\n    setClickedUser(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(userLoading && clickedUser) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${clickedUser.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {clickedUser.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {clickedUser.completed\n                ? (<strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n  const [loading, setLoading] = useState(false);\n  const [clickedUser, setClickedUser] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .catch(() => new Error('Try again later'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    const filterTodos = todos.filter(todo => {\n      const preperedTodo = todo.title.toLowerCase();\n      const preperedQuery = query.toLowerCase();\n\n      return preperedTodo.includes(preperedQuery);\n    });\n\n    switch (status) {\n      case 'all':\n        return filterTodos;\n      case 'active':\n        return filterTodos.filter(todo => todo.completed === false);\n      case 'completed':\n        return filterTodos.filter(todo => todo.completed === true);\n      default:\n        return filterTodos;\n    }\n  }, [todos, query, status]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                query={query}\n                setStatus={setStatus}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={filteredTodos}\n                  setClickedUser={setClickedUser}\n                  clickedUser={clickedUser}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {clickedUser && (\n        <TodoModal\n          clickedUser={clickedUser}\n          setClickedUser={setClickedUser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}